
T6_A.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000b4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000108  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      00000030  00000000  00000000  00000108  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000138  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000174  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000602  00000000  00000000  00000194  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000551  00000000  00000000  00000796  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000020b  00000000  00000000  00000ce7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00000ef4  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000319  00000000  00000000  00000f18  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  00001231  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 58 00 	jmp	0xb0	; 0xb0 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include <avr/io.h>


int main(void)
{
	DDRA = 0xFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
	{
		////--------0------------------------
		if ((PINB&0b00000001)>0 )
		{
			
			PORTA=num[0];
  70:	ef e3       	ldi	r30, 0x3F	; 63
		
		//-------1--------------------------------------
		if ((PINB&0b00000010)>0 )
		{
			
			PORTA=num[1];
  72:	76 e0       	ldi	r23, 0x06	; 6

		//----------2-----------------------
		if ((PINB&0b00000100)>0 )
		{
		
		PORTA=num[2];
  74:	6b e5       	ldi	r22, 0x5B	; 91
		}
		//--------3--------------------------
		if ((PINB&0b00001000)>0 )
		{
		
		PORTA=num[3];
  76:	5f e4       	ldi	r21, 0x4F	; 79
		}
		//---------4---------------------------
		if ((PINB&0b00010000)>0 )
		{
		
		PORTA=num[4];
  78:	46 e6       	ldi	r20, 0x66	; 102
		//----------V----------------------------------------
		//----------5----------------------------------------
		if ((PINC&0b00000001)>0 )
		{
		
		PORTA=num[5];
  7a:	3d e6       	ldi	r19, 0x6D	; 109
		}
		//----------6------------------------------
		if ((PINC&0b00000010)>0 )
		{
		
		PORTA=num[6];
  7c:	2d e7       	ldi	r18, 0x7D	; 125
		
		//----------7------------------------------
		if ((PINC&0b00000100)>0 )
		{
		
		PORTA=num[7];
  7e:	97 e0       	ldi	r25, 0x07	; 7
		}
		//----------8------------------------------
		if ((PINC&0b00001000)>0 )
		{
		
		PORTA=num[8];
  80:	8f e7       	ldi	r24, 0x7F	; 127
		
		}
		//----------9------------------------------
		if ((PINC&0b00010000)>0 )
		{
		PORTA=num[9];
  82:	ff e6       	ldi	r31, 0x6F	; 111

	
	while (1)
	{
		////--------0------------------------
		if ((PINB&0b00000001)>0 )
  84:	b0 99       	sbic	0x16, 0	; 22
		{
			
			PORTA=num[0];
  86:	eb bb       	out	0x1b, r30	; 27
			
			
		}
		
		//-------1--------------------------------------
		if ((PINB&0b00000010)>0 )
  88:	b1 99       	sbic	0x16, 1	; 22
		{
			
			PORTA=num[1];
  8a:	7b bb       	out	0x1b, r23	; 27
			
			
		}

		//----------2-----------------------
		if ((PINB&0b00000100)>0 )
  8c:	b2 99       	sbic	0x16, 2	; 22
		{
		
		PORTA=num[2];
  8e:	6b bb       	out	0x1b, r22	; 27
		
		
		}
		//--------3--------------------------
		if ((PINB&0b00001000)>0 )
  90:	b3 99       	sbic	0x16, 3	; 22
		{
		
		PORTA=num[3];
  92:	5b bb       	out	0x1b, r21	; 27
		
		
		}
		//---------4---------------------------
		if ((PINB&0b00010000)>0 )
  94:	b4 99       	sbic	0x16, 4	; 22
		{
		
		PORTA=num[4];
  96:	4b bb       	out	0x1b, r20	; 27
		//----------|----------------------------------------
		//----------|----------------------------------------
		//----------|----------------------------------------
		//----------V----------------------------------------
		//----------5----------------------------------------
		if ((PINC&0b00000001)>0 )
  98:	98 99       	sbic	0x13, 0	; 19
		{
		
		PORTA=num[5];
  9a:	3b bb       	out	0x1b, r19	; 27
		
		
		}
		//----------6------------------------------
		if ((PINC&0b00000010)>0 )
  9c:	99 99       	sbic	0x13, 1	; 19
		{
		
		PORTA=num[6];
  9e:	2b bb       	out	0x1b, r18	; 27
		
		
		}
		
		//----------7------------------------------
		if ((PINC&0b00000100)>0 )
  a0:	9a 99       	sbic	0x13, 2	; 19
		{
		
		PORTA=num[7];
  a2:	9b bb       	out	0x1b, r25	; 27
		
		
		}
		//----------8------------------------------
		if ((PINC&0b00001000)>0 )
  a4:	9b 99       	sbic	0x13, 3	; 19
		{
		
		PORTA=num[8];
  a6:	8b bb       	out	0x1b, r24	; 27
		
		
		}
		//----------9------------------------------
		if ((PINC&0b00010000)>0 )
  a8:	9c 9b       	sbis	0x13, 4	; 19
  aa:	ec cf       	rjmp	.-40     	; 0x84 <main+0x18>
		{
		PORTA=num[9];
  ac:	fb bb       	out	0x1b, r31	; 27
  ae:	ea cf       	rjmp	.-44     	; 0x84 <main+0x18>

000000b0 <_exit>:
  b0:	f8 94       	cli

000000b2 <__stop_program>:
  b2:	ff cf       	rjmp	.-2      	; 0xb2 <__stop_program>
